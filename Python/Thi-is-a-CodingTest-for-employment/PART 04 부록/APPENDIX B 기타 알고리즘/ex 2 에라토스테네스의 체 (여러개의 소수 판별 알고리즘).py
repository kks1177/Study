# ex 2 에라토스테네스의 체 (여러개의 소수 판별 알고리즘).py
'''
에라토스테네스의 체 : 여러 개의 수가 소수인지 아닌지를 판별할 때 사용하는 대표적인 알고리즘
N보다 작거나 같은 모든 소수를 찾을 때 사용 가능

에라토스테네스의 체 알고리즘
 1. 2부터 N까지의 모든 자연수 나열
 2. 남은 수 중에서 아직 처리하지 않은 가장 작은 수 i 탐색
 3. 남은 수 중에서 i의 배수를 모두 제거 (i는 제거 x)
 4. 더 이상 반복할 수 없을 때까지 2번과 3번의 과정 반복

에라토스테네스의 체 알고리즘은 동작속도가 매우 빠름. --> 다수의 소수를 찾아야 하는 문제에서 자주 사용
 but, 메모리가 많이 필요함. N이 1,000,000 이내로 주어지는 경우에 이 알고리즘 사용
'''

# 여러 개의 소수 판별 알고리즘
import math

n = 1000        # 2부터 1000까지의 모든 수에 대하여 소수 판별
array = [True for i in range(n+1)]      # 처음엔 모든 수가 소수(True)인 것으로 초기화 (0과 1은 제외)

# 에라토스테네스의 체 알고리즘
for i in range(2, int(math.sqrt(n))+1):     # 2부터 n의 제곱근까지의 모든 수를 확인하며
    if array[i] == True:        # i가 소수인 경우(남은 수인 경우)
        # i를 제외한 i의 모든 배수를 지우기
        j = 2

        while i * j <= n:
            array[i*j] = False
            j += 1

# 모든 소수 출력
for i in range(2, n+1):
    if array[i]:
        print(i, end=' ')
