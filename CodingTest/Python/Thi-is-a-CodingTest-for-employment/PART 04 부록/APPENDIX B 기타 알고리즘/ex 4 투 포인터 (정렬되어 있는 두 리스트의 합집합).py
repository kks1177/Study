# ex 4 투 포인터 (정렬되어 있는 두 리스트의 합집합).py
# '정렬되어 있는 두 리스트의 합집합' 문제
'''
2개의 리스트 A, B가 주어졌을 때, 2개의 포인트 이용, 각 리스트에서 처리되지 않은 원소 중 가장 작은 원소를 가리키면 됨
 1. 정렬된 리스트 A와 B를 입력받음
 2. 리스트 A에서 처리되지 않은 원소 중 가장 작은 원소를 i가 가리키도록 함
 3. 리스트 B에서                                  j가 가리키도록 함
 4. A[i]와 B[j] 중에서 더 작은 원소를 결과 리스트에 담음
 5. 리스트 A와 B에서 더 이상 처리할 원소가 없을 때까지 2~4번의 과정 반복
'''

# 사전에 정렬된 리스트 A와 B 선언
n, m = 3, 4
a = [1, 3, 5]
b = [2, 4, 6, 8]

# 리스트 A와 B의 모든 원소를 담을 수 있는 크기의 결과 리스트 초기화
result = [0] * (n + m)
i = 0
j = 0
k = 0

# 모든 원소가 결과 리스트에 담길 때까지 반복
while i < n or j < m:
    # 리스트 B의 모든 원소가 처리되었거나, 리스트 A의 원소가 더 작을 때
    if j >= m or (i < n and a[i] <= b[j]):
        # 리스트 A의 원소를 결과 리스트로 옮기기
        result[k] = a[i]
        i += 1
    # 리스트 A의 모든 원소가 처리되었거나, 리스트 B의 원소가 더 작을 때
    else:
        # 리스트 B의 원소를 결과 리스트로 옮기기
        result[k] = b[j]
        j += 1
    k += 1

# 결과 리스트 출력
for i in result:
    print(i, end=' ')
